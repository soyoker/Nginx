# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;

#---性能优化相关---
worker_processes auto;  #worker子进程的数量 与cpu核心数量一致最佳
worker_cpu_affinity 00001; #绑定cpu的指定核心，提高cpu缓存的命中率
worker_priority [-20-19];  #指定worker进程的nice值，即优先级
worker_rlimit_nofile 65535;  #指定worker子进程可以打开的文件最大数量
#---性能优化相关---

#---调试相关---
daemon on|off;  #是否以守护进程方式运行nignx，默认是守护进程方式.此选项用于实时调试
error_log /var/log/nginx/error.log;   #错误日志文件及其级别；出于调试需要，可设定为debug；但debug仅在编译时使用了“--with-debug”选项时才有效 !
#---调试相关---

pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

#---事件参数优化---
events {
    worker_connections 1024;  #每个worker进程所能够打开的最大并发连接数数量
    use epoll;   #use method 指明并发连接请求的处理方法，默认自动选择最优方法epoll
    accept_mutex on|off；#处理新的连接请求的方法；on指由各个worker轮流处理新请求，Off指每个新请求的到达都会通知（唤醒）所有的worker进程，
                          但只有一个进程可获得连接，造成“惊群”，影响性能
}
#---事件参数优化---

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    server_tokens      off;  #隐藏服务器版本号
    sendfile            on;  #是否启用sendfile功能，在内核中封装报文直接发送 默认Off
    tcp_nopush          on;
    tcp_nodelay         on;  #在keepalived模式下的连接是否启用TCP_NODELAY选项当为off时延迟发送，合并多个请求后再发送；默认On时，不延迟发送
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;  #在/etc/nginx/conf.d/下的所有.conf都可以生效，即用户可以根据需要新建自定义conf文件

    #---虚拟主机信息配置开始---
    server {
        listen       80 default_server;  #监听端口，“default_server”参数表示启用为默认站点
        listen       [::]:80 default_server;
        server_name  _;  #站点名称
        root         /usr/share/nginx/html;  #站点根目录 下面location的匹配优先级较高

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        #---特定目录配置---
        location / {  #可以使用"location= /"精确匹配URL root，给定的路径对应于location中的/URL/左侧的/
        #root /dir/dir   指定网站根或者其他URL目录的路径,优先级级别高到低：=，^~,*~,~,不带符号
        #alias /dir/dir  alias给定的路径对应于location中的/URL/右侧的/
        }

        error_page 404 /404.html; #404表示浏览器返回的响应码 /404.html表示404显示的页面
        location = /404.html {
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
        }
    }

# Settings for a TLS enabled server.
#
#    server {
#        listen       443 ssl http2 default_server;
#        listen       [::]:443 ssl http2 default_server;
#        server_name  _;
#        root         /usr/share/nginx/html;
#
#        ssl_certificate "/etc/pki/nginx/server.crt";
#        ssl_certificate_key "/etc/pki/nginx/private/server.key";
#        ssl_session_cache shared:SSL:1m;
#        ssl_session_timeout  10m;
#        ssl_ciphers HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers on;
#
#        # Load configuration files for the default server block.
#        include /etc/nginx/default.d/*.conf;
#
#        location / {
#        }
#
#        error_page 404 /404.html;
#        location = /404.html {
#        }
#
#        error_page 500 502 503 504 /50x.html;
#        location = /50x.html {
#        }
#    }

}
```
